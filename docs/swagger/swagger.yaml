basePath: /
definitions:
  account.Account:
    properties:
      balance:
        type: number
      cpf:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  account.AccountBalance:
    properties:
      balance:
        type: number
    type: object
  account.AccountInput:
    properties:
      cpf:
        type: string
      name:
        type: string
      secret:
        type: string
    type: object
  account.DepositInput:
    properties:
      amount:
        type: number
    type: object
  account.Withdraw:
    properties:
      amount:
        type: number
    type: object
  app.ResponseInternalServerError:
    properties:
      details:
        items:
          properties:
            property:
              type: string
            reason:
              type: string
            value:
              type: string
          type: object
        type: array
      title:
        example: internal server error
        type: string
      type:
        example: srn:error:internal_server_error
        type: string
    required:
    - title
    - type
    type: object
  auth.Login:
    properties:
      cpf:
        type: string
      secret:
        type: string
    type: object
  transfer.Transfer:
    properties:
      accountDestinationID:
        type: string
      accountOriginID:
        type: string
      amount:
        type: number
      createdAt:
        type: string
      id:
        type: string
    type: object
info:
  contact: {}
  description: Documentation for Challenge-Go API
  title: Swagger Challenge API
  version: "2.0"
paths:
  /accounts:
    get:
      consumes:
      - application/json
      description: List all accounts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/account.Account'
            type: array
      summary: Get accounts
    post:
      consumes:
      - application/json
      description: Create an account with the basic information
      parameters:
      - description: Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/account.AccountInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/account.Account'
        "400":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.ResponseInternalServerError'
      summary: Create an account
  /accounts/{id}/balance:
    get:
      consumes:
      - application/json
      description: Show the balance of a specific account
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/account.AccountBalance'
        "400":
          description: Failed to decode
        "404":
          description: Account not found
        "500":
          description: Unexpected internal server error
      summary: account balance
  /deposit:
    post:
      consumes:
      - application/json
      description: Make a deposit from an authenticated user
      parameters:
      - description: Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/account.DepositInput'
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Make a deposit
  /login:
    post:
      consumes:
      - application/json
      description: Takes the CPF and password of a user, if they are correct, a token
        is generated
      parameters:
      - description: Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/auth.Login'
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Login
  /transfers:
    get:
      consumes:
      - application/json
      description: Lists all transfers made by an authenticated user
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/transfer.Transfer'
            type: array
      summary: List transfers from a user
    post:
      consumes:
      - application/json
      description: Transfer between accounts. The account that will make the transfer
        must be authenticated with a token.
      parameters:
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Make a transfer
  /withdraw:
    post:
      consumes:
      - application/json
      description: Make a Withdraw from an authentic account
      parameters:
      - description: Body
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/account.Withdraw'
      - description: Bearer
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      summary: Make a Withdraw
swagger: "2.0"
